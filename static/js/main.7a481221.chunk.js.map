{"version":3,"sources":["components/Input.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["error","props","className","role","Input","onSubmit","submitEvent","type","name","placeholder","weather","fetchApi","e","a","preventDefault","city","target","elements","value","country","url","fetch","api_call","json","response","console","log","setState","sys","celcius","Math","floor","main","temp","temp_max","temp_min","description","get_weatherIcon","weatherIcon","id","state","icon","undefined","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","this","Component","App","Weather","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a481221.chunk.js","sourcesContent":["import React from 'react'\r\nimport './input.css'\r\n\r\nfunction Input(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div>{props.error ? error():null}</div>\r\n            <form onSubmit={props.submitEvent}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 py-1\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"city\"\r\n                            placeholder=\"City\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 py-1\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"country\"\r\n                            placeholder=\"Country\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3  mt-md-0 \">\r\n                        <button className=\"btn btn-success\">Search</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst error = props => {\r\n    return (\r\n      <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n        Please Enter City and Country...!\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from 'react'\r\nimport Input from './Input';\r\n\r\nconst API_key = \"ff772dc6f3ad2aeb86c3ad88dc7d0f1e\"\r\n\r\n\r\nexport class weather extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            city: null,\r\n            country: null,\r\n            icon: null,\r\n            main: null,\r\n            celcius: null,\r\n            temp_max: null,\r\n            temp_min: null,\r\n            description: \"\",\r\n            icon: undefined,\r\n            error: false,\r\n        }\r\n\r\n        this.weatherIcon = {\r\n            Thunderstorm: \"wi-thunderstorm\",\r\n            Drizzle: \"wi-sleet\",\r\n            Rain: \"wi-storm-showers\",\r\n            Snow: \"wi-snow\",\r\n            Atmosphere: \"wi-fog\",\r\n            Clear: \"wi-day-sunny\",\r\n            Clouds: \"wi-day-fog\",\r\n        };\r\n\r\n    }\r\n    get_weatherIcon(icons, rangeId) {\r\n        switch (true) {\r\n            case rangeId >= 200 && rangeId <= 232:\r\n                this.setState({ icon: icons.Thunderstorm });\r\n                break;\r\n            case rangeId >= 300 && rangeId <= 321:\r\n                this.setState({ icon: icons.Drizzle });\r\n                break;\r\n            case rangeId >= 500 && rangeId <= 521:\r\n                this.setState({ icon: icons.Rain });\r\n                break;\r\n            case rangeId >= 600 && rangeId <= 781:\r\n                this.setState({ icon: icons.Snow });\r\n                break;\r\n            case rangeId >= 701 && rangeId <= 232:\r\n                this.setState({ icon: icons.Atmosphere });\r\n                break;\r\n            case rangeId === 800:\r\n                this.setState({ icon: icons.Clear });\r\n                break;\r\n            case rangeId >= 801 && rangeId <= 804:\r\n                this.setState({ icon: icons.Clouds });\r\n                break;\r\n            default:\r\n                this.setState({ icon: icons.Clouds })\r\n        }\r\n    }\r\n\r\n    fetchApi = async (e) => {\r\n        e.preventDefault()\r\n        const city = e.target.elements.city.value\r\n        const country = e.target.elements.country.value\r\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`\r\n\r\n        if (city && country) {\r\n            const api_call = await fetch(url)\r\n            const response = await api_call.json()\r\n            console.log(response)\r\n\r\n            this.setState({\r\n                city: `${response.name},${response.sys.country}`,\r\n                // city: response.name,\r\n                // country: response.sys.country,\r\n                celcius: Math.floor(response.main.temp - 273.15),\r\n                temp_max: Math.floor(response.main.temp_max - 273.15),\r\n                temp_min: Math.floor(response.main.temp_min - 273.15),\r\n                description: response.weather[0].description,\r\n                // icon:this.weatherIcon.Thunderstorm,\r\n                error: false\r\n            })\r\n            this.get_weatherIcon(this.weatherIcon,response.weather[0].id);\r\n        }\r\n        else {\r\n            this.setState({ error: true })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container text-light\">\r\n                <Input submitEvent={this.fetchApi} error={this.state.error} />\r\n                <div className=\"sub-container pt-4\">\r\n                    <h1>{this.state.city}</h1>\r\n                    {/* <h5 className=\"py-4\"><i className=\"wi wi-day-sunny display-1\"></i></h5> */}\r\n                    <h5 className=\"py-4\"><i className={`wi ${this.state.icon\r\n                    } display-1`}></i></h5>\r\n\r\n                    {\r\n                        this.state.celcius ? <h1 className=\"py-5\">{this.state.celcius}&deg;C</h1> : null\r\n                    }\r\n                    {\r\n                        (this.state.temp_min && this.state.temp_max) ?\r\n                            <h5>\r\n                                <span className=\"px-5\">Min:{this.state.temp_min}&deg;C</span>\r\n                                <span className=\"px-5\">Max:{this.state.temp_max}&deg;C</span>\r\n                            </h5>\r\n                            : null\r\n\r\n                    }\r\n\r\n                    <h4 className=\"py-4\">{this.state.description}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default weather\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react'\r\n\r\n// const API_key = \"ff772dc6f3ad2aeb86c3ad88dc7d0f1e\"\r\n\r\n// function minmaxTemp(min,max){\r\n//     return(\r\n//         <h3>\r\n//             <span>{min}&deg; </span>\r\n//             <span>{max}&deg;</span>\r\n//         </h3>\r\n//     )\r\n// }\r\n\r\n// const Weather = () => {\r\n//     const[city,setCity] = useState('Mumbai')\r\n\r\n\r\n//     useEffect(() => {\r\n//         const fetchApi = async() => {\r\n//             const url = `http://api.openweathermap.org/data/2.5/weather?q=Mumbai,IN&appid=${API_key}`\r\n//             const api_call = await fetch(url)\r\n//             const response = await api_call.json()\r\n//             console.log(response)\r\n//             // setCity(response)\r\n//             setCity({\r\n//                 city:response.main,\r\n//                 //country:response.sys.country\r\n//             })\r\n\r\n//         }\r\n//         fetchApi()\r\n//     },[])\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <div className=\"sub-container\">\r\n//                 <h1>London</h1>\r\n\r\n//                 <h5 className=\"icons\">\r\n//                     <i class=\"wi wi-day-sunny\"></i>\r\n//                 </h5>\r\n//                 <h1>25&deg;</h1>\r\n//                 {minmaxTemp(10,25)}\r\n\r\n//                 <h4>slow rain</h4>\r\n//                 {\r\n//                     !city ? (\r\n//                         <p>No data found</p>\r\n//                     ) : (\r\n//                         <div>\r\n\r\n\r\n//                         </div>\r\n//                     )\r\n//                 }\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Weather\r\n","\nimport './App.css';\nimport Weather from './components/Weather'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'weather-icons/css/weather-icons.css'\n// import Input from './components/Input';\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"py-3\">Weather App</h1>\n      {/* <Input/> */}\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}